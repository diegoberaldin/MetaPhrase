[versions]
androidx_datastore = "1.0.0"
commons_csv = "1.10.0"
guava = "31.1-jre"
exposed = "0.41.1"
h2 = "2.1.214"
koin = "3.4.2"
kotlinx_coroutines = "1.7.1"
kotlinx_serialization = "1.5.1"
ktor = "2.3.1"
languagetool = "6.1"
log4j = "2.20.0"
decompose = "2.0.0-alpha-02"
redundent = "1.9.0"
sl4j = "1.7.30"

appVersion = "1.0.0-beta-02"
buildNumber = "4"

[libraries]
# DI
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin_test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# Decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose_extensions = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }

# AndroidX
androidx_datastore = { module = "androidx.datastore:datastore-preferences-core", version.ref = "androidx_datastore" }

# coroutines
kotlinx_coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx_coroutines" }
kotlinx_coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx_coroutines" }

# persistence
h2database = { module = "com.h2database:h2", version.ref = "h2" }
exposed_core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed_dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed_jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

# serialization
redundent = { module = "org.redundent:kotlin-xml-builder", version.ref = "redundent" }
commons_csv = { module = "org.apache.commons:commons-csv", version.ref = "commons_csv" }
kotlinx_serialization_json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx_serialization" }

# networking
ktor_core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor_cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor_negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor_serialization_json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# spelling
guava = { module = "com.google.guava:guava", version.ref = "guava" }
languagetool = { module = "org.languagetool:language-all", version.ref = "languagetool" }

# logging
log4j_api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j_core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j_impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
sl4j_api = { module = "org.slf4j:slf4j-api", version.ref = "sl4j" }


[bundles]
log4j = ["sl4j.api", "log4j.api", "log4j.core", "log4j.impl"]
exposed = ["exposed.core", "exposed.dao", "exposed.jdbc"]
